apiVersion: apps/v1
kind: Deployment
metadata:
  name: karo
  namespace: default
  labels:
    app: karo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: karo
  template:
    metadata:
      labels:
        app: karo
    spec:
      serviceAccountName: karo
      containers:
      - name: manager
        image: docker.io/dudizimber/karo:latest
        imagePullPolicy: IfNotPresent
        command:
        - /manager
        args:
        - --leader-elect
        - --webhook-port=9090
        ports:
        - name: webhook
          containerPort: 9090
          protocol: TCP
        - name: metrics
          containerPort: 8080
          protocol: TCP
        - name: health
          containerPort: 8081
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: health
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: health
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        fsGroup: 65532
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: karo-webhook
  namespace: default
  labels:
    app: karo
spec:
  type: ClusterIP
  ports:
  - name: webhook
    port: 9090
    targetPort: webhook
    protocol: TCP
  selector:
    app: karo
---
apiVersion: v1
kind: Service
metadata:
  name: karo-metrics
  namespace: default
  labels:
    app: karo
spec:
  type: ClusterIP
  ports:
  - name: metrics
    port: 8080
    targetPort: metrics
    protocol: TCP
  selector:
    app: karo
