apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "karo.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "karo.labels" . | nindent 4 }}
  {{- with include "karo.annotations" . }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "karo.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with include "karo.annotations" . }}
        {{- . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "karo.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "karo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: manager
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: {{ include "karo.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /manager
        args:
        {{- if .Values.operator.leaderElection.enabled }}
        - --leader-elect
        {{- end }}
        - --webhook-port={{ .Values.operator.webhook.port }}
        {{- range .Values.args }}
        {{- if not (or (eq . "--leader-elect") (hasPrefix "--webhook-port=" .)) }}
        - {{ . | quote }}
        {{- end }}
        {{- end }}
        ports:
        - name: webhook
          containerPort: {{ .Values.operator.webhook.port }}
          protocol: TCP
        {{- if .Values.operator.metrics.enabled }}
        - name: metrics
          containerPort: {{ .Values.operator.metrics.port }}
          protocol: TCP
        {{- end }}
        - name: health
          containerPort: {{ .Values.operator.health.port }}
          protocol: TCP
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 10 }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- if .Values.env }}
        env:
          {{- toYaml .Values.env | nindent 10 }}
        {{- end }}
        {{- if .Values.extraVolumeMounts }}
        volumeMounts:
          {{- toYaml .Values.extraVolumeMounts | nindent 10 }}
        {{- end }}
      {{- if .Values.extraVolumes }}
      volumes:
        {{- toYaml .Values.extraVolumes | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
